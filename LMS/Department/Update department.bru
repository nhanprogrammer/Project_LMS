meta {
  name: Update department
  type: http
  seq: 3
}

put {
  url: {{base_url}}api/department
  body: json
  auth: none
}

body:json {
  {
    "id": 1,
    "name": "Khá»‘i 1",
    "isDelete": false,
    "updateAt": "2025-03-06T15:03:56.842Z",
    "userUpdate": 1
  }
}

tests {
  test("Successful PUT request", function () {
      expect(res.getStatus()).to.be.oneOf([200, 201, 204]);
  });
  
}

docs {
  This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).
  
  A successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.
}
